{"version":3,"sources":["store.js","components/Cell.js","components/Popup.js","App.js","index.js"],"names":["socket","undefined","joinedBoard","updatedCells","submissionResult","errorOccurred","Cell","cellVal","uneditable","index","cycleUp","cycleDown","typeIn","value","type","readOnly","id","onContextMenu","e","preventDefault","style","background","onClick","onChange","Popup","show","onPopupClose","res","class","JSON","stringify","App","props","cycleCell","delta","val","state","puzzle","row","Math","floor","col","newVal","emit","store","console","log","Array","verdict","time","penalty","showPopup","countUp","bind","setInterval","d","Number","h","m","s","this","setState","uC","sR","eO","board","boardName","fn","document","getElementById","innerHTML","status","forEach","axios","get","then","data","catch","err","alert","io","connect","on","channelName","cells","className","name","channel","map","key","secondsToHms","title","React","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a15b80d7.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport io from 'socket.io-client';\r\nconst BASE_URL = \"\";\r\n\r\nlet socket = undefined;\r\n\r\nlet joinedBoard = undefined;\r\nlet updatedCells = undefined;\r\nlet submissionResult = undefined;\r\nlet errorOccurred = undefined;\r\n\r\nexport function connectToServer(jB, uC, sR, eO) {\r\n    joinedBoard = jB;\r\n    updatedCells = uC;\r\n    submissionResult = sR;\r\n    errorOccurred = eO;\r\n\r\n    socket = io.connect(BASE_URL);\r\n\r\n    socket.on(\"connect\", function (data) {\r\n        console.log(\"Connected to server!\");\r\n    });\r\n\r\n    socket.on(\"joinedBoard\", (channelName) => {\r\n        if (typeof (joinedBoard) === 'function') {\r\n            joinedBoard(channelName);\r\n        }\r\n    });\r\n\r\n    socket.on(\"updatedCells\", (cells) => {\r\n        if (typeof (updatedCells) === 'function') {\r\n            updatedCells(cells);\r\n        }\r\n    });\r\n\r\n    socket.on(\"submissionResult\", (res) => {\r\n        console.log(\"Called hoise\");\r\n        console.log(typeof(submissionResult));\r\n        if (typeof (submissionResult) === 'function') {\r\n            submissionResult(res);\r\n        }\r\n    });\r\n\r\n    socket.on(\"errorOccurred\", (err) => {\r\n        if (typeof (errorOccurred) === 'function') {\r\n            errorOccurred(err);\r\n        }\r\n    });\r\n}\r\n\r\nexport function createBoard() {\r\n    socket.emit(\"createBoard\");\r\n}\r\n\r\nexport function joinBoard(channel) {\r\n    socket.emit(\"joinBoard\", channel);\r\n}\r\n\r\nexport function updateCell(row, col, val) {\r\n    socket.emit(\"updateCell\", { row, col, val });\r\n}\r\n\r\nexport function submitBoard() {\r\n    socket.emit(\"submitBoard\");\r\n}\r\n\r\nexport function subscribeToJoinedBoard(fn) {\r\n    joinedBoard = fn;\r\n}\r\n\r\nexport function subscribeToUpdatedCells(fn) {\r\n    updatedCells = fn;\r\n}\r\n\r\nexport function subscribeToSubmissionResult(fn) {\r\n    submissionResult = fn;\r\n}\r\n\r\nexport function subscribeToErrorOccurred(fn) {\r\n    errorOccurred = fn;\r\n}\r\n\r\nexport function getStatus(boardName, fn) {\r\n    axios.get(`${BASE_URL}/status/${boardName}`)\r\n        .then(res => fn(res.data))\r\n        .catch(err => alert(err));\r\n}\r\n\r\n","import React from 'react'\r\n/** \r\nfunction handleInputClick(cellVal, index) {\r\n        let newVal = parseInt(document.getElementById(`txtbx${index}`).value) + 1;\r\n        if (newVal === 10) {\r\n            newVal = 1;\r\n        }\r\n        document.getElementById(`txtbx${index}`).value = newVal;\r\n}\r\n**/\r\n\r\nexport default function Cell({ cellVal, uneditable, index, cycleUp, cycleDown, typeIn }) {\r\n    if (uneditable) {\r\n        return (\r\n            <input\r\n                value={cellVal}\r\n                type=\"text\"\r\n                readOnly={true}\r\n                id={`txtbx${index}`}\r\n                onContextMenu={(e) => { e.preventDefault() }}\r\n                style={{ background: \"lightblue\" }}\r\n    \r\n            />\r\n        );\r\n    } else {\r\n        return (\r\n            <input\r\n                value={cellVal === 0 ? \"\" : cellVal}\r\n                style={{ background: \"white\"}}\r\n                type=\"text\"\r\n                id={`txtbx${index}`}\r\n                onClick={cycleUp}\r\n                onContextMenu={(e) => { e.preventDefault(); cycleDown(); }}\r\n                onChange={typeIn}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nexport default function Popup({show, onPopupClose, res}) {\r\n    if (show === true) {\r\n        return (\r\n            <div class=\"popup\">\r\n                <p>{JSON.stringify(res)}</p>\r\n                <button onClick={() => {onPopupClose()}}>\r\n                    X\r\n                </button>\r\n            </div>\r\n        )\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport * as store from \"./store\";\r\nimport Cell from \"./components/Cell\";\r\nimport Popup from \"./components/Popup\"\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            puzzle: new Array(81),\r\n            uneditable: new Array(81),\r\n            verdict: false,\r\n            time: 0,\r\n            penalty: 0,\r\n            showPopup: false,\r\n        };\r\n        this.countUp = this.countUp.bind(this);\r\n        setInterval(this.countUp, 1000);\r\n    }\r\n\r\n    cycleCell = (index, delta) => () => {\r\n        const val = this.state.puzzle[index];\r\n        const row = Math.floor(index / 9);\r\n        const col = index % 9;\r\n        let newVal = val + delta;\r\n        if (newVal < 0) newVal = 9;\r\n        if (newVal > 9) newVal = 0;\r\n        store.updateCell(row, col, newVal);\r\n        console.log(row, col, newVal);\r\n    };\r\n\r\n    secondsToHms(d) {\r\n        d = Number(d);\r\n        const h = Math.floor(d / 3600);\r\n        const m = Math.floor((d % 3600) / 60);\r\n        const s = Math.floor((d % 3600) % 60);\r\n        const hDisplay = h > 0 ? h + (h === 1 ? \" hr \" : \" hrs \") : \"\";\r\n        const mDisplay = m > 0 ? m + (m === 1 ? \" min \" : \" mins \") : \"\";\r\n        const sDisplay = s > 0 ? s + (s === 1 ? \" sec\" : \" secs\") : \"\";\r\n        return hDisplay + mDisplay + sDisplay;\r\n    }\r\n\r\n    countUp() {\r\n        this.setState(({ time }) => ({ time: time + 1 }));\r\n    }\r\n\r\n    componentDidMount() {\r\n        store.connectToServer((board) => {\r\n            document.getElementById(\"server\").innerHTML = board;\r\n            store.getStatus(board, (status) => {\r\n                console.log(JSON.stringify(status, undefined, 4));\r\n                let uneditable = new Array(81);\r\n                status.uneditable.forEach(({ row, col }) => {\r\n                    uneditable[row * 9 + col] = true;\r\n                });\r\n                this.setState({ \r\n                    uneditable,\r\n                    time: status.time,\r\n                    penalty: status.penalty,\r\n                 });\r\n            });\r\n        });\r\n        store.createBoard();\r\n        store.subscribeToUpdatedCells((cells) => {\r\n            const { puzzle } = this.state;\r\n            cells.forEach(({ row, col, val }) => (puzzle[row * 9 + col] = val));\r\n            this.setState({ puzzle });\r\n        });\r\n        store.subscribeToSubmissionResult((res) => {\r\n            const { time, penalty, verdict } = res;\r\n            this.setState({ showPopup: true, time, penalty, verdict });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { verdict, penalty, time } = this.state;\r\n        return (\r\n            <div className=\"App\">\r\n                <h1>Sudoku With Friends</h1>\r\n                <div id=\"info\">\r\n                    You are on board:\r\n                    <div id=\"server\"></div>\r\n                    <input type=\"text\" name=\"join-board\" id=\"join-board\" />\r\n                    <button\r\n                        id=\"join-button\"\r\n                        onClick={() => {\r\n                            const boardName = document.getElementById(\r\n                                \"join-board\"\r\n                            ).value;\r\n                            store.joinBoard(boardName);\r\n                        }}\r\n                    >\r\n                        Join Board\r\n                    </button>\r\n                </div>\r\n                <form id=\"sudoku-board\">\r\n                    {this.state.puzzle.map((val, index) => (\r\n                        <Cell\r\n                            key={index}\r\n                            index={index}\r\n                            cellVal={val}\r\n                            uneditable={this.state.uneditable[index]}\r\n                            cycleUp={this.cycleCell(index, 1)}\r\n                            cycleDown={this.cycleCell(index, -1)}\r\n                        />\r\n                    ))}\r\n                </form>\r\n                <div id=\"check\">\r\n                    <div id=\"timer\">\r\n                        Timer:{\" \"}\r\n                        {!this.state.time\r\n                            ? \"0\"\r\n                            : this.secondsToHms(this.state.time)}{\" \"}\r\n                    </div>\r\n                    <div id=\"penalty\">Penalty: {this.state.penalty} </div>\r\n                    <button\r\n                        id=\"submit-board\"\r\n                        onClick={() => {\r\n                            store.submitBoard();\r\n                        }}\r\n                    >\r\n                        Submit Guess\r\n                    </button>\r\n                </div>\r\n\r\n                <Popup\r\n                    show={this.state.showPopup}\r\n                    onPopupClose={() => this.setState({ showPopup: false })}\r\n                    res={{ verdict, time, penalty }}\r\n                />\r\n\r\n                <div id=\"help\">\r\n                    <abbr\r\n                        title=\"Send your friend(s) the ID of the board or join theirs.\r\n                    Left or right click on a cell to cycle between numbers.\"\r\n                    >\r\n                        <i>Help?</i>\r\n                    </abbr>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}